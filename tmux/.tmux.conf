# Sensible defaults taken from
# https://github.com/tony/tmux-config

# mpc keybindings w/ key repeat
bind-key -r P run "mpc -q toggle"
bind-key -r > run "mpc -q next"
bind-key -r < run "mpc -q prev"

# Remap prefix from 'C-b' to 'C-a'
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1
bind-key 0 select-window -t :10

# Allows for faster key repetition
set -s escape-time 0

# Use vi keybindings in Copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# hjkl pane traversal
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# pane resizing w/ key repeat
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# Split panes using b and v
bind-key v split-window -h
bind-key b split-window -v
unbind-key '"'
unbind-key %

# Reload config file
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Don't confirm killing panes and windows
bind-key x kill-pane
bind-key X kill-window
unbind-key &

# Enable mouse mode
set -g mouse on

# Don't rename windows automatically
set-option -g allow-rename off

# Keep colors pretty
set -g default-terminal "screen-256color"

# Use https://github.com/edkolev/tmuxline.vim plugin
# This config was edited from a tmuxline.vim setup

# Messaging
set -g message-command-bg "colour8"
set -g message-command-fg "colour7"
set -g message-bg "colour8"
set -g message-fg "colour7"

# Pane
set -g pane-active-border-fg "colour2"
set -g pane-border-fg "colour8"

# Status
set -g status "on"
set -g status-justify "left"
set -g status-attr "none"
set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-bg "colour0"
prefx="#{?client_prefix,#[fg=colour2]#[bg=colour0],#[fg=colour0]#[bg=colour2]} #S"
music="#[fg=colour2,bg=colour0] #(tmux-music-info)"
battery="#[fg=colour2,bg=colour0] #(tmux-battery-info)"
date="#[fg=colour7,bg=colour8] %Y-%m-%d | %H:%M"
hostname="#[fg=colour0,bg=colour2] #h"
set -g status-left "$prefx "
set -g status-right "$music $battery $date $hostname "

# Windows
setw -g window-status-attr "none"
setw -g window-status-fg "colour2"
setw -g window-status-bg "colour0"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-bg "colour0"
setw -g window-status-activity-fg "colour2"
setw -g window-status-separator ""
setw -g window-status-format "#[fg=colour2,bg=colour0] #W "
setw -g window-status-current-format "#[fg=colour7,bg=colour8] #W "

