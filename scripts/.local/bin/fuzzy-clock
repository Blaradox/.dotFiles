#!/usr/bin/env bash

hours=("zero" "one" "two" "three" "four" "five" "six" "seven" "eight" "nine" "ten" "eleven" "twelve")

hour=$(date +'%I')
minute=$(date +'%M')

# strips leading zero to prevent octal number assumption
hour=$(( "10#$hour" ))
minute=$(( "10#$minute" ))

# if the hour is more than half done, we make reference to next hour
if (( minute >= 33 )) && (( hour != 12 )); then
  hour=$(( hour + 1 ))
else
  hour=1
fi

hour_as_text=${hours[$hour]}

if (( minute < 3 )); then time_as_text="$hour_as_text o'clock"
elif (( minute < 8 )); then time_as_text="five after $hour_as_text"
elif (( minute < 13 )); then time_as_text="ten after $hour_as_text"
elif (( minute < 18 )); then time_as_text="quarter after $hour_as_text"
elif (( minute < 23 )); then time_as_text="twenty after $hour_as_text"
elif (( minute < 28 )); then time_as_text="twent-five after $hour_as_text"
elif (( minute < 33 )); then time_as_text="half past $hour_as_text"
elif (( minute < 38 )); then time_as_text="twenty-five to $hour_as_text"
elif (( minute < 43 )); then time_as_text="twenty to $hour_as_text"
elif (( minute < 48 )); then time_as_text="quarter to $hour_as_text"
elif (( minute < 53 )); then time_as_text="ten to $hour_as_text"
elif (( minute < 58 )); then time_as_text="five to $hour_as_text"
elif (( minute >= 58 )); then time_as_text="$hour_as_text o'clock"
else exit $1
fi

printf "$time_as_text\n"

